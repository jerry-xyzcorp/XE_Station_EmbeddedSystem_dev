/*
 * User_IceDispenser.c
 *
 *  Created on: 2023. 1. 25.
 *      Author: Ethan
 */


#include "User_IceDispenser.h"

void lever_control(uint32_t exit_time)
{
	// lever on
	HAL_GPIO_WritePin(ICE01_relay_GPIO_Port, ICE01_relay_Pin, GPIO_PIN_SET);	// Relay Close
	HAL_Delay(exit_time); // unit : ms

	// lever off
	HAL_GPIO_WritePin(ICE01_relay_GPIO_Port, ICE01_relay_Pin, GPIO_PIN_RESET);	// Relay Open
}

void iceDispenser_SetMode(uint16_t water_time, uint16_t ice_time)
{
	uint16_t wait_time = 500; // 5sec

	if(water_time == 0){
		HAL_GPIO_WritePin(ICE01_water_GPIO_Port, ICE01_water_Pin, GPIO_PIN_RESET);
		HAL_Delay(wait_time);
		HAL_GPIO_WritePin(ICE01_water_GPIO_Port, ICE01_water_Pin, GPIO_PIN_SET);
	}
	else if(ice_time == 0){
		HAL_GPIO_WritePin(ICE01_ice_GPIO_Port, ICE01_ice_Pin, GPIO_PIN_RESET);
		HAL_Delay(wait_time);
		HAL_GPIO_WritePin(ICE01_ice_GPIO_Port, ICE01_ice_Pin, GPIO_PIN_SET);
	}
	else{
		HAL_GPIO_WritePin(ICE01_mix_GPIO_Port, ICE01_mix_Pin, GPIO_PIN_RESET);
		HAL_Delay(wait_time);
		HAL_GPIO_WritePin(ICE01_mix_GPIO_Port, ICE01_mix_Pin, GPIO_PIN_SET);
	}
}

void init_iceDispensor(void)
{

}

bool stopAll(void)
{
	return true;
}

uint8_t getStatus_iceDispensor(void)
{
	return ERROR;
}

bool startExit(uint32_t water_time, uint32_t ice_time)
{
	uint32_t exit_time = 0;

	// set mode - ice, water, mix
	iceDispenser_SetMode(water_time, ice_time);

	// set exit time
	if(water_time > ice_time)
		exit_time = water_time;
	else
		exit_time = ice_time;
	printf("exit_time : %d", exit_time);

	// lever control
	lever_control(exit_time);

	return true;
}

