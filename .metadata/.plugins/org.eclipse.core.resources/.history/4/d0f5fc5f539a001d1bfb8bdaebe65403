#ifndef __USER_TFMINIS_H
#define __USER_TFMINIS_H

#ifdef __cplusplus
extern "C" {
#endif
/*
 * DEFAULT address: 0x10
 * address range  : 0x01~0x7F
 */

#include <stdint.h>
// I2C1 : BK, CP
// I2C2 : LD
//******* Slave address
#define GetAddr(sensor_id) (sensor_id << 1)
#define ID_OFFSET		0x21

// sensor ID
#define BK01		0x21
#define BK02		0x22
#define BK03		0x23
#define CP01		0x24
#define CP02		0x25
#define CP03		0x26
#define CP04		0x27
#define LD01		0x28
#define LD02		0x29
#define LD03		0x2a
#define LD04		0x2b

#define _DIST 		1
#define _STOCK_NUM 	2
#define _OFFSET		3
#define LEN 		3

#define BK_NUM			3
#define CP_NUM			4
#define LD_NUM			4
#define TFminiS_NUM		11

// Error list
#define TX_ERROR	1 // Error TX

typedef enum { false, true } bool;

bool	error[10];
uint8_t error_value;

bool 	is_running;
uint16_t streaming_period;
uint16_t TFminiS_info[TFminiS_NUM][LEN];


void 		initTFminiS(void);
bool 		set_thresh(uint8_t sensor_id, uint16_t threashold);
uint8_t* 	initPacket(uint8_t mode);
uint16_t 	getDistance(uint8_t sensor_id);
uint8_t 	getStock(uint8_t sensor_id);
void 		TFminiSTest(void);

#ifdef __cplusplus
}
#endif

#endif
